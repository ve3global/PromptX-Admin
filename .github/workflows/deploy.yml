name: Deploy Service

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
      AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
      AWS_CLUSTER_NAME: ${{ secrets.AWS_CLUSTER_NAME }}
      IMAGE_REPO_NAME: ${{ secrets.IMAGE_REPO_NAME }}
      IMAGE_TAG: ${{ secrets.IMAGE_TAG }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with: 
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

      - name: Pre-Build
        run: |
          echo "Logging into Amazon ECR"
          echo "$AWS_DEFAULT_REGION"
          aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
          aws eks --region $AWS_DEFAULT_REGION update-kubeconfig --name $AWS_CLUSTER_NAME
          echo "Verifying AWS identity"
          aws sts get-caller-identity
          echo "check config"
          cat $HOME/.kube/config
          echo "check kubectl access"
          kubectl config current-context 
          kubectl get svc 
          if ! kubectl get namespace admin &>/dev/null; then 
              echo "Namespace 'admin' not found. Creating it...";
              kubectl create namespace admin;
          else
              echo "Namespace 'admin' already exists."; 
          fi
          export REPOSITORY_URI=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME
          echo $REPOSITORY_URI

      - name: Build
        run: |
          echo "Building Docker image"
          docker build -t $IMAGE_REPO_NAME:$IMAGE_TAG .
          docker tag $IMAGE_REPO_NAME:$IMAGE_TAG $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG

      - name: Post-Build
        run: |
          echo "Pushing Docker image to ECR"
          docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG
          echo "Docker Push to ECR Repository Completed"
          if kubectl get deployment admin-deployment -n admin &>/dev/null; then kubectl delete deployment admin-deployment -n admin; fi  
          kubectl apply -f manifest.yml -n admin
          kubectl get svc -n admin
